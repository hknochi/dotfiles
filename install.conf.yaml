- clean: ['~']

- link:
    # zsh
    ~/.zshrc: zsh/zshrc
    # ack
    ~/.ackrc: ack/ackrc
    # slate
    ~/.slate.js: slate/slate.js
    # sublime
    ~/.bin/subl: "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl"
    "~/Library/Application Support/Sublime Text 3/Packages/User": sublime/User
    # git
    ~/.gitconfig: git/gitconfig
    ~/.gitignore_global: git/gitignore_global
    ~/.bin/git-email-prompt: git/git-email-prompt.sh
    # ssh
    ~/.ssh: $HOME/.config/ssh
    # powerline shell
    ~/.config/powerline: powerline/config_files
    # rdf.sh
    ~/.config/rdf.sh: rdf.sh
    # docker config certs
    ~/.config/ssl/docker-eccenca/ca.pem: ~/.config/ssl/docker-eccenca/ca.cer
    ~/.config/ssl/docker-eccenca/key.pem: ~/.config/ssl/docker-eccenca/client_hknochenhauer.key
    ~/.config/ssl/docker-eccenca/cert.pem: ~/.config/ssl/docker-eccenca/client_hknochenhauer.cer
    ~/.config/ssl/docker-eccenca/client-key.pem: ~/.config/ssl/docker-eccenca/client_hknochenhauer.key
    ~/.config/ssl/docker-eccenca/client-cert.pem: ~/.config/ssl/docker-eccenca/client_hknochenhauer.cer
    # ansible
    ~/.config/ansible_hosts: $HOME/.ansible_hosts
    # docker
    ~/.bin/docker-i: docker/docker-i
    ~/.bin/docker-loglast: docker/docker-loglast
    ~/.bin/docker-psa: docker/docker-psa
    ~/.bin/docker-rmf: docker/docker-rmf
    ~/.bin/docker-searcheccenca: docker/docker-searcheccenca

- shell:
  # homebrew
  - description: "Installing Homebrew"
    command: 'ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"'
    stdin: true
  # some dependencies
  - [brew install coreutils, Installing coreutils]
  - [brew install wget, Installing wget]
  - [brew install curl, Installing curl]
  - [brew install python, Installing python]
  - [brew install parallel, Installing parallel]
  # zsh
  - [brew install zsh, Installing zsh]
  - description: "Changing default shell to zsh"
    command: "chsh -s /usr/local/bin/zsh"
    stdin: true
  # powerline shell
  - [pip install powerline-status, Installing powerline shell]
  - description: "Installing powerline fonts"
    command: "curl -sSL https://raw.githubusercontent.com/powerline/fonts/master/install.sh | sh"
    stdin: true
  # terminal notifications
  - [brew install terminal-notifier, Installing terminal-notifier]
  # fasd
  - [brew install fasd, Installing fasd]
  # git
  - [brew install git, Installing git]
  - [brew install git-flow, Installing git-flow]
  - [brew install tig, Installing tig]
  # ack
  - [brew install ack, Installing ack]
  # ncdu
  - [brew install ncdu, Installing ncdu]
  # tree
  - [brew install tree, Installing tree]
  # rdf.sh
  - ["brew install https://raw.githubusercontent.com/seebi/rdf.sh/master/brew/rdf.sh.rb", Installing rdf.sh]
  - [pip install Pygments, Installing Pygments]
  - description: "Installing n3pygments"
    command: "sh rdf.sh/install_n3pygments.sh"
    stdin: true
  # raptor
  - [brew install raptor, Installing raptor]
  # jq
  - [brew install jq, Installing jq]
  # keybase / gnupg
  - [brew install keybase, Installing keybase]
  - [brew install gpg-agent, Installing gpg-agent]
  #- description: "Login to keybase"
  #  command: "keybase login"
  #  stdin: true
  #- description: "Decrypt secrets"
  #  command: "sh ssh/decrypt_secrets.sh"
  #  stdin: true
  # creating directories
  - [mkdir -p ~/.config, Creating .config directory]
  - [mkdir -p ~/.bin, Creating .bin directory]
  # set home to iterm2
  - [defaults write com.googlecode.iterm2 Working\ Directory -string $HOME]
  - [defaults write com.googlecode.iterm2 PrefsCustomFolder -string $HOME/.dotfiles/iterm2]
  

